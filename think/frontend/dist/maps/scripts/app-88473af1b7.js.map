{"version":3,"sources":["scripts/app-88473af1b7.js"],"names":["angular","module","factory","$resource","SenseStatus","AllModuleStatus","ModuleStatus","ngSenseItem","senseItemController","deviceList","status","moduleList","$interval","$scope","delDevice","logButtonText","expandButtonText","showModules","showLogViewer","getSenseStatus","getModules","get","senseId","sense","response","modules","fromJson","result","moduleCount","length","deviceStatus","displayModules","displayLog","$inject","directive","restrict","replace","templateUrl","scope","imgId","link","element","attrs","$observe","controller","controllerAs","bindToController","senseContent","senseContentController","$modal","$log","vm","this","getDevices","open","modalInstance","animation","modalController","then","setDevice","id","info","Date","$modalInstance","Math","floor","random","ok","close","cancel","dismiss","creationDate","ngNavbar","NavbarController","ngModuleItem","moduleItemController","getModuleStatus","moduleId","moduleStatus","moduleContent","moduleContentController","moduleEmpty","$http","devices","iconId","method","url","data","senseIcon","forEach","obj","service","MainController","$timeout","toastr","activate","classAnimation","showToastr","awesomeThings","runBlock","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","when","otherwise","config","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-88473af1b7.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('public', ['ngAnimate', 'ngCookies', 'ngSanitize', 'ui.router', 'ui.bootstrap', 'toastr', 'ngFileUpload', 'ngResource']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.\n    module('public').\n    factory('status', function ($resource) {\n      return {\n        SenseStatus: $resource('api/status/:senseId', {}, {}),\n        AllModuleStatus: $resource('api/status/:senseId/modules', {}, {}),\n        ModuleStatus: $resource('api/status/:senseId/modules/:moduleId', {}, {})\n      };\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseItem', ngSenseItem);\n\n  /** @ngInject */\n  function ngSenseItem() {\n    var directive = {\n      restrict: 'A',\n      replace: false,\n      templateUrl: 'app/components/senseItem/senseItem.html',\n      scope: {\n          senseId: '@',\n          imgId: '@',\n          deviceStatus: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;\n          scope.getModules();\n          scope.getSenseStatus();\n\n        });\n\n        attrs.$observe('imgId', function(imgId) {\n          scope.sense.imgId = imgId;\n        });\n      },\n      controller: senseItemController,\n      controllerAs: 'senseItemController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseItemController(deviceList, status, moduleList, $interval, $scope) {\n      $scope.delDevice = deviceList.delDevice;\n      $scope.logButtonText = 'View';\n      $scope.expandButtonText = '+';\n      $scope.showModules = false;\n      $scope.showLogViewer = false;\n\n      $interval($scope.getSenseStatus, 10000);\n\n      $scope.getModules = function () {\n        moduleList.get({senseId: $scope.sense.senseId}, function(response) {\n          $scope.modules = angular.fromJson(response.result);\n          $scope.moduleCount = $scope.modules.length;\n        });\n      };\n\n      $scope.getSenseStatus = function() {\n        status.SenseStatus.get({senseId: $scope.sense.senseId}, function(response) {\n          $scope.sense.deviceStatus = response.status;\n        });\n      };\n\n      $scope.displayModules = function () {\n          if ($scope.expandButtonText == '+') {\n            $scope.expandButtonText = '-';\n          } else if ($scope.expandButtonText == '-') {\n            $scope.expandButtonText = '+';\n          }\n          $scope.showModules = !$scope.showModules;\n      };\n\n      $scope.displayLog = function () {\n          if ($scope.logButtonText == 'View') {\n            $scope.logButtonText = 'Hide';\n          } else {\n            $scope.logButtonText = 'View';\n          }\n          $scope.showLogViewer = !$scope.showLogViewer;\n      };\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseContent', senseContent);\n\n  /** @ngInject */\n  function senseContent() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/senseContent/senseContent.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: senseContentController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseContentController(deviceList, $scope, $modal, $log) {\n      var vm = this;\n\n      vm.getDevices = deviceList.getDevices;\n      vm.delDevice = deviceList.delDevice;\n      // vm.deviceEmpty = (angular.equals(vm.getDevices(),{})) ? true: false;\n\n      // $scope.$watch(function(){ return deviceList.getDevices}, function(newVal, oldVal){\n      //   $log.info('data change'+newVal+' '+oldVal);\n      // }, true);\n\n      vm.open = function(){\n\n        var modalInstance = $modal.open({\n          animation: 1,\n          templateUrl: 'addModalContent.html',\n          controller: modalController,\n          controllerAs: 'vm'\n        });\n\n        modalInstance.result.then(function (sense) {\n\n          deviceList.setDevice(sense.id, sense.imgId);\n\n          $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n\n        }, function () {\n\n          $log.info('Modal dismissed at: ' + new Date());\n\n        });\n      };\n    }\n\n    function modalController($modalInstance){\n      var vm = this;\n\n      vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n\n      vm.senseId = \"\"; // sense id\n\n\n      vm.ok = function(){\n        $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n      };\n\n      vm.cancel = function(){\n        $modalInstance.dismiss('cancel');\n      };\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngNavbar', ngNavbar);\n\n  /** @ngInject */\n  function ngNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      \n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngModuleItem', ngModuleItem);\n\n  /** @ngInject */\n  function ngModuleItem() {\n    var directive = {\n      restrict: 'A',\n      replace: false,\n      templateUrl: 'app/components/moduleItem/moduleItem.html',\n      scope: {\n          senseId: '@',\n          moduleId: '@',\n          moduleStatus: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;\n          scope.getModuleStatus();\n        });\n\n        attrs.$observe('moduleId', function(moduleId) {\n          scope.sense.moduleId = moduleId;\n          scope.getModuleStatus();\n        });\n      },\n      controller: moduleItemController,\n      controllerAs: 'moduleItemController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function moduleItemController(status, $scope, $interval) {\n      $scope.showLogViewer = false;\n\n      $interval($scope.getModuleStatus, 10000);\n\n      $scope.getModuleStatus = function() {\n        if ($scope.sense.senseId && $scope.sense.moduleId) {\n          status.ModuleStatus.get({senseId: $scope.sense.senseId, moduleId: $scope.sense.moduleId}, function(response) {\n            $scope.sense.moduleStatus = response.status;\n          });\n        }\n      };\n\n      $scope.displayLog = function () {\n          $scope.showLogViewer = !$scope.showLogViewer;\n      };\n\n      // $scope.displayLog = function () {\n      //     $scope.$parent.displayLog();\n      // };\n\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngModuleContent', moduleContent);\n\n  /** @ngInject */\n  function moduleContent() {\n    var directive = {\n      restrict: 'E',\n      // replace: false,\n      templateUrl: 'app/components/moduleContent/moduleContent.html',\n      scope: {\n          creationDate: '=',\n          senseId: '@'\n      },\n      link: function(scope, element, attrs){\n        attrs.$observe('senseId', function(senseId) {\n          scope.senseId = senseId;\n          scope.getModules();\n        });\n      },\n      controller: moduleContentController,\n      controllerAs: 'moduleContentController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function moduleContentController(moduleList, $scope) {\n\n      $scope.getModules = function () {\n        moduleList.get({senseId: $scope.senseId}, function(response) {\n          $scope.modules = angular.fromJson(response.result);\n          $scope.moduleEmpty = $scope.modules.length == 0;\n        });\n      };\n\n      // $scope.$watch(function(){ return moduleList.getModules}, function(newVal, oldVal){\n      //   $log.info('data change'+newVal+' '+oldVal);\n      // }, true);\n\n      // vm.open = function(){\n      //\n      //   var modalInstance = $modal.open({\n      //     animation: 1,\n      //     templateUrl: 'addModalContent.html',\n      //     controller: modalController,\n      //     controllerAs: 'vm'\n      //   });\n      //\n      //   modalInstance.result.then(function (sense) {\n      //\n      //     moduleList.setModule(sense.id, sense.imgId);\n      //\n      //     $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n      //\n      //   }, function () {\n      //\n      //     $log.info('Modal dismissed at: ' + new Date());\n      //\n      //   });\n      // };\n    }\n\n    // function modalController($modalInstance){\n    //   var vm = this;\n    //\n    //   vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n    //\n    //   vm.senseId = \"\"; // sense id\n    //\n    //\n    //   vm.ok = function(){\n    //     $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n    //   };\n    //\n    //   vm.cancel = function(){\n    //     $modalInstance.dismiss('cancel');\n    //   };\n    // }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('public')\n      .service('deviceList', deviceList);\n\n\n  /** @ngInject */\n  function deviceList($http, $log) {\n    var devices = {};\n    $http({\n      method: 'GET',\n      url: 'api/devices'\n    }).then(function successCallback(response) {\n        var data = angular.fromJson(response.data.result);\n        data.forEach(function(obj){\n          devices[obj.senseId] = obj.senseIcon;\n        });\n      }, function errorCallback(response) {\n        $log.info(response);\n    });      \n\n    this.getDevices = getDevices;\n    this.setDevice = setDevice;\n    this.delDevice = delDevice;\n\n    function getDevices() {\n      return devices;\n    }\n\n    function setDevice(senseId, iconId) {\n      // call the backend api here to store the data\n      $http({\n        method: 'POST',\n        url: 'api/registerDevice',\n        data: {'senseId':senseId, 'senseIcon': iconId}\n      }).then(function successCallback(response) {\n          $log.info(response);\n        }, function errorCallback(response) {\n          $log.info(response);\n      });      \n      devices[senseId] = iconId;\n    }\n\n    function delDevice(senseId) {      \n      // call the backend api here to delete the data\n      $http({\n        method: 'DELETE',\n        url: 'api/devices/'+ senseId\n      });      \n\n      delete devices[senseId];\n    }\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular.\n    module('public').\n    factory('moduleList', function ($resource) {\n      return $resource('api/devices/:senseId/modules', {}, {})\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1445587798203;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('think', {\n        url: \"/think\",\n        templateUrl: \"app/node-red/node-red.html\"\n      })\n      .state('sense', {\n        url: \"/sense\",\n        templateUrl: \"app/main/main.html\",\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .state('404', {\n        url: \"/404\",\n        templateUrl: \"app/exception/404.html\"\n      });\n      $urlRouterProvider.when('', '/sense');\n      $urlRouterProvider.otherwise('404');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"public\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/exception/404.html\",\"<div class=\\\"container\\\"><h1 style=\\\"text-align: center\\\">404 NOT FOUND</h1></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"container\\\"><ng-sense-content></ng-sense-content></div></div>\");\n$templateCache.put(\"app/node-red/node-red.html\",\"<div class=\\\"node-red-box\\\"><iframe src=\\\"node-red/\\\" width=\\\"100%\\\" height=\\\"100%\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\"></iframe></div>\");\n$templateCache.put(\"app/components/moduleContent/moduleContent.html\",\"<table class=\\\"table\\\"><thead></thead><tbody ng-module-item=\\\"\\\" ng-repeat=\\\"key in modules\\\" module-id=\\\"{{ key }}\\\" sense-id=\\\"{{ senseId }}\\\"></tbody><tbody ng-show=\\\"moduleEmpty\\\"><tr><td colspan=\\\"6\\\" class=\\\"empty-text\\\">You have not yet registered any modules yet.</td></tr></tbody></table>\");\n$templateCache.put(\"app/components/moduleItem/moduleItem.html\",\"<tr><th scope=\\\"row\\\" class=\\\"vert-align\\\"></th><td class=\\\"vert-align\\\">{{sense.moduleId}}</td><td class=\\\"vert-align\\\"></td><td class=\\\"vert-align\\\"><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.moduleStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.moduleStatus }}</div></td><td class=\\\"vert-align\\\"></td><td class=\\\"vert-align\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"\\\"></td></tr>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div class=\\\"row\\\" id=\\\"header\\\"><div class=\\\"col-md-2\\\"><div class=\\\"logo-img pull-left\\\"><img src=\\\"assets/images/IBM_IoT_cloud2.png\\\" width=\\\"117px\\\"></div></div><div class=\\\"col-md-4\\\"><div class=\\\"logo-text\\\"><h1>HUMIX NG</h1></div></div><div class=\\\"col-md-6 header-options\\\"><ul class=\\\"list-inline breadcrumbs\\\"><li><a ui-sref=\\\"sense\\\">Sense</a></li><li><a ui-sref=\\\"think\\\">Think</a></li></ul></div></div>\");\n$templateCache.put(\"app/components/senseContent/senseContent.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"title\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.open()\\\">Add Sense</button><hr></div><div class=\\\"row\\\"><table class=\\\"table\\\"><thead class=\\\"thead-inverse\\\"><tr><th></th><th>Sense ID</th><th>Status</th><th>Modules</th><th>Remove</th></tr></thead><tbody ng-sense-item=\\\"\\\" ng-repeat=\\\"(key, val) in vm.getDevices()\\\" sense-id=\\\"{{ key }}\\\" img-id=\\\"{{ val }}\\\"></tbody></table></div></div><script type=\\\"text/ng-template\\\" id=\\\"addModalContent.html\\\"><div class=\\\"modal-header\\\"> <h3 class=\\\"modal-title\\\">Add Sencse</h3> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\"> <div class=\\\"form-group\\\"> <div class=\\\"col-sm-3 modal-thumbnail-block\\\"> <img ng-src=\\\"assets/images/bluemix-icon-list/i-appicon-{{ vm.imgId }}-50.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\" /> </div> <label class=\\\"col-sm-1 control-label\\\" for=\\\"sense-id\\\">ID: </label> <div class=\\\"col-sm-8\\\"> <input type=\\\"text\\\" id=\\\"sense-id\\\" class=\\\"form-control\\\" placeholder=\\\"Humix-Godzilla\\\" ng-model=\\\"vm.senseId\\\"/> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\">OK</button> <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button> </div></script>\");\n$templateCache.put(\"app/components/senseItem/senseItem.html\",\"<tr><th scope=\\\"row\\\" class=\\\"vert-align\\\"><img ng-src=\\\"assets/images/bluemix-icon-list/i-appicon-{{ sense.imgId }}-50.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></th><td class=\\\"vert-align\\\"><button ng-click=\\\"displayModules()\\\">{{expandButtonText}}</button> {{sense.senseId}}</td><td class=\\\"vert-align\\\"><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.deviceStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.deviceStatus }}</div></td><td class=\\\"vert-align\\\">{{moduleCount}}</td><td class=\\\"vert-align\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"delDevice(sense.senseId)\\\"></td></tr><tr ng-show=\\\"showModules\\\"><td class=\\\"no-top-border\\\"></td><td colspan=\\\"4\\\" class=\\\"no-top-border\\\"><ng-module-content sense-id=\\\"{{ sense.senseId }}\\\"></ng-module-content></td></tr>\");}]);"],"sourceRoot":"/source/"}