{"version":3,"sources":["scripts/app-3fc69577b6.js"],"names":["angular","module","ModuleController","$scope","$state","$stateParams","vm","this","senseId","$inject","controller","factory","$resource","SenseStatus","AllModuleStatus","ModuleStatus","ngSenseItem","senseItemController","deviceList","status","moduleList","$interval","logButtonText","expandButtonText","showModules","showLogViewer","getSenseStatus","getModules","Modules","get","sense","response","modules","fromJson","result","moduleCount","length","deviceStatus","displayModules","displayLog","deleteSense","confirm","delDevice","directive","restrict","replace","template","elem","attrs","gridView","scope","imgId","link","element","dynamicTemplateUrl","$observe","controllerAs","bindToController","senseContent","senseContentController","$modal","$log","getDevices","viewButtonClick","info","open","modalInstance","animation","templateUrl","modalController","then","setDevice","id","Date","$modalInstance","Math","floor","random","ok","close","cancel","dismiss","creationDate","viewType","$watch","ngNavbar","NavbarController","ngModuleItem","moduleItemController","getModuleStatus","moduleId","moduleStatus","deleteModule","alert","moduleContent","moduleContentController","moduleEmpty","$http","devices","iconId","method","url","data","senseIcon","forEach","obj","service","MainController","$timeout","toastr","activate","classAnimation","showToastr","awesomeThings","runBlock","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","when","otherwise","config","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-3fc69577b6.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('public', ['ngAnimate', 'ngCookies', 'ngSanitize', 'ui.router', 'ui.bootstrap', 'toastr', 'ngFileUpload', 'ngResource']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .controller('ModuleController', ModuleController);\n\n  /** @ngInject */\n  function ModuleController($scope, $state, $stateParams) {\n    var vm = this;\n    //$log.info('senseId: ' + $stateParams.senseId);\n    vm.senseId = $stateParams.senseId;\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.\n    module('public').\n    factory('status', function ($resource) {\n      return {\n        SenseStatus: $resource('api/status/:senseId', {}, {}),\n        AllModuleStatus: $resource('api/status/:senseId/modules', {}, {}),\n        ModuleStatus: $resource('api/status/:senseId/modules/:moduleId', {}, {})\n      };\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseItem', ngSenseItem);\n\n  /** @ngInject */\n  function ngSenseItem() {\n    var directive = {\n      restrict: 'A',\n      replace: true,\n      template: function (elem, attrs) {\n        if (attrs.gridView == \"true\") {\n            return '<div ng-include src=\"dynamicTemplateUrl\"></div>';\n        }\n        else {\n            return '<tbody ng-include src=\"dynamicTemplateUrl\"></tbody>';\n        }\n      },\n      scope: {\n          senseId: '@',\n          imgId: '@',\n          deviceStatus: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.dynamicTemplateUrl = 'app/components/senseItem/senseItem-list.html';\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;\n          scope.getModules();\n          scope.getSenseStatus();\n\n        });\n\n        attrs.$observe('imgId', function(imgId) {\n          scope.sense.imgId = imgId;\n        });\n\n        attrs.$observe('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/senseItem/senseItem-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/senseItem/senseItem-list.html';\n          }\n        });\n      },\n      controller: senseItemController,\n      controllerAs: 'senseItemController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseItemController(deviceList, status, moduleList, $interval, $scope) {\n      $scope.logButtonText = 'View';\n      $scope.expandButtonText = '+';\n      $scope.showModules = false;\n      $scope.showLogViewer = false;\n\n      $interval($scope.getSenseStatus, 10000);\n\n      $scope.getModules = function () {\n        moduleList.Modules.get({senseId: $scope.sense.senseId}, function(response) {\n          $scope.modules = angular.fromJson(response.result);\n          $scope.moduleCount = $scope.modules.length;\n        });\n      };\n\n      $scope.getSenseStatus = function() {\n        status.SenseStatus.get({senseId: $scope.sense.senseId}, function(response) {\n          $scope.sense.deviceStatus = response.status;\n        });\n      };\n\n      $scope.displayModules = function () {\n          if ($scope.expandButtonText == '+') {\n            $scope.expandButtonText = '-';\n          } else if ($scope.expandButtonText == '-') {\n            $scope.expandButtonText = '+';\n          }\n          $scope.showModules = !$scope.showModules;\n      };\n\n      $scope.displayLog = function () {\n          if ($scope.logButtonText == 'View') {\n            $scope.logButtonText = 'Hide';\n          } else {\n            $scope.logButtonText = 'View';\n          }\n          $scope.showLogViewer = !$scope.showLogViewer;\n      };\n\n      $scope.deleteSense = function(senseId) {\n        if (confirm(\"Do you want to remove \" + senseId + \"?\")) {\n          deviceList.delDevice(senseId);\n        }\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseContent', senseContent);\n\n  /** @ngInject */\n  function senseContent() {\n    var directive = {\n      restrict: 'E',\n      template: '<ng-include src=\"dynamicTemplateUrl\"></ng-include>',\n      //templateUrl: 'app/components/senseContent/senseContent-table.html',\n      scope: {\n          creationDate: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.dynamicTemplateUrl = 'app/components/senseContent/senseContent-list.html';\n        attrs.$observe('viewType', function(viewType) {\n          if (viewType == \"grid\") {\n              scope.gridView = \"true\";\n          }\n          else {\n              scope.gridView = \"false\";\n          }\n        });\n\n        scope.$watch('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/senseContent/senseContent-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/senseContent/senseContent-list.html';\n          }\n        });\n      },\n      controller: senseContentController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseContentController(deviceList, $scope, $modal, $log) {\n      var vm = this;\n\n      vm.getDevices = deviceList.getDevices;\n      vm.delDevice = deviceList.delDevice;\n      // vm.deviceEmpty = (angular.equals(vm.getDevices(),{})) ? true: false;\n\n      // $scope.$watch(function(){ return deviceList.getDevices}, function(newVal, oldVal){\n      //   $log.info('data change'+newVal+' '+oldVal);\n      // }, true);\n\n      vm.viewButtonClick = function() {\n          $log.info('org scope.gridView: ' + $scope.gridView);\n          $scope.gridView = !$scope.gridView;\n      };\n\n      vm.open = function(){\n\n        var modalInstance = $modal.open({\n          animation: 1,\n          templateUrl: 'addModalContent.html',\n          controller: modalController,\n          controllerAs: 'vm'\n        });\n\n        modalInstance.result.then(function (sense) {\n\n          deviceList.setDevice(sense.id, sense.imgId);\n\n          $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n\n        }, function () {\n\n          $log.info('Modal dismissed at: ' + new Date());\n\n        });\n      };\n    }\n\n    function modalController($modalInstance){\n      var vm = this;\n\n      vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n\n      vm.senseId = \"\"; // sense id\n\n\n      vm.ok = function(){\n        $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n      };\n\n      vm.cancel = function(){\n        $modalInstance.dismiss('cancel');\n      };\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngNavbar', ngNavbar);\n\n  /** @ngInject */\n  function ngNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      \n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngModuleItem', ngModuleItem);\n\n  /** @ngInject */\n  function ngModuleItem() {\n    var directive = {\n      restrict: 'A',\n      replace: true,\n      template: function (elem, attrs) {\n        if (attrs.gridView == \"true\") {\n            return '<div ng-include src=\"dynamicTemplateUrl\"></div>';\n        }\n        else {\n            return '<tbody ng-include src=\"dynamicTemplateUrl\"></tbody>';\n        }\n      },\n      scope: {\n          senseId: '@',\n          moduleId: '@',\n          moduleStatus: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.dynamicTemplateUrl = 'app/components/moduleItem/moduleItem-list.html';\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;\n          scope.getModuleStatus();\n        });\n\n        attrs.$observe('moduleId', function(moduleId) {\n          scope.sense.moduleId = moduleId;\n          scope.getModuleStatus();\n        });\n\n        attrs.$observe('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/moduleItem/moduleItem-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/moduleItem/moduleItem-list.html';\n          }\n        });\n      },\n      controller: moduleItemController,\n      controllerAs: 'moduleItemController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function moduleItemController(moduleList, status, $scope, $interval) {\n      $scope.showLogViewer = false;\n\n      $interval($scope.getModuleStatus, 10000);\n\n      $scope.getModuleStatus = function() {\n        if ($scope.sense.senseId && $scope.sense.moduleId) {\n          status.ModuleStatus.get({senseId: $scope.sense.senseId, moduleId: $scope.sense.moduleId}, function(response) {\n            $scope.sense.moduleStatus = response.status;\n          });\n        }\n      };\n\n      $scope.displayLog = function () {\n          $scope.showLogViewer = !$scope.showLogViewer;\n      };\n\n      $scope.deleteModule = function(moduleId) {\n        // if (confirm(\"Do you want to remove \" + moduleId + \"?\")) {\n        //\n        // }\n        alert(\"Function not implemented yet!\");\n      }\n\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngModuleContent', moduleContent);\n\n  /** @ngInject */\n  function moduleContent() {\n    var directive = {\n      restrict: 'E',\n      replace: true,\n      template: '<ng-include src=\"dynamicTemplateUrl\"></ng-include>',\n      //templateUrl: 'app/components/moduleContent/moduleContent.html',\n      scope: {\n          creationDate: '=',\n          senseId: '@'\n      },\n      link: function(scope, element, attrs){\n        scope.dynamicTemplateUrl = 'app/components/moduleContent/moduleContent-list.html';\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.senseId = senseId;\n          scope.getModules();\n        });\n\n        attrs.$observe('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/moduleContent/moduleContent-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/moduleContent/moduleContent-list.html';\n          }\n        });\n      },\n      controller: moduleContentController,\n      controllerAs: 'moduleContentController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function moduleContentController(moduleList, $scope) {\n\n      $scope.getModules = function () {\n        moduleList.Modules.get({senseId: $scope.senseId}, function(response) {\n          $scope.modules = angular.fromJson(response.result);\n          $scope.moduleEmpty = $scope.modules.length == 0;\n        });\n      };\n\n      // $scope.$watch(function(){ return moduleList.getModules}, function(newVal, oldVal){\n      //   $log.info('data change'+newVal+' '+oldVal);\n      // }, true);\n\n      // vm.open = function(){\n      //\n      //   var modalInstance = $modal.open({\n      //     animation: 1,\n      //     templateUrl: 'addModalContent.html',\n      //     controller: modalController,\n      //     controllerAs: 'vm'\n      //   });\n      //\n      //   modalInstance.result.then(function (sense) {\n      //\n      //     moduleList.setModule(sense.id, sense.imgId);\n      //\n      //     $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n      //\n      //   }, function () {\n      //\n      //     $log.info('Modal dismissed at: ' + new Date());\n      //\n      //   });\n      // };\n    }\n\n    // function modalController($modalInstance){\n    //   var vm = this;\n    //\n    //   vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n    //\n    //   vm.senseId = \"\"; // sense id\n    //\n    //\n    //   vm.ok = function(){\n    //     $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n    //   };\n    //\n    //   vm.cancel = function(){\n    //     $modalInstance.dismiss('cancel');\n    //   };\n    // }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('public')\n      .service('deviceList', deviceList);\n\n\n  /** @ngInject */\n  function deviceList($http, $log) {\n    var devices = {};\n    $http({\n      method: 'GET',\n      url: 'api/devices'\n    }).then(function successCallback(response) {\n        var data = angular.fromJson(response.data.result);\n        data.forEach(function(obj){\n          devices[obj.senseId] = obj.senseIcon;\n        });\n      }, function errorCallback(response) {\n        $log.info(response);\n    });      \n\n    this.getDevices = getDevices;\n    this.setDevice = setDevice;\n    this.delDevice = delDevice;\n\n    function getDevices() {\n      return devices;\n    }\n\n    function setDevice(senseId, iconId) {\n      // call the backend api here to store the data\n      $http({\n        method: 'POST',\n        url: 'api/registerDevice',\n        data: {'senseId':senseId, 'senseIcon': iconId}\n      }).then(function successCallback(response) {\n          $log.info(response);\n        }, function errorCallback(response) {\n          $log.info(response);\n      });      \n      devices[senseId] = iconId;\n    }\n\n    function delDevice(senseId) {      \n      // call the backend api here to delete the data\n      $http({\n        method: 'DELETE',\n        url: 'api/devices/'+ senseId\n      });      \n\n      delete devices[senseId];\n    }\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular.\n    module('public').\n    factory('moduleList', function ($resource) {\n      return {\n        Modules: $resource('api/devices/:senseId/modules', {}, {})\n      };\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($stateParams, $timeout, toastr) {\n    var vm = this;\n\n    vm.viewType = ($stateParams.viewType == 'grid') ? 'grid' : 'list';\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1445587798203;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('think', {\n        url: \"/think\",\n        templateUrl: \"app/node-red/node-red.html\"\n      })\n      .state('sense', {\n        url: \"/sense/:viewType\",\n        templateUrl: \"app/main/main.html\",\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .state('module', {\n        url: \"/module/:senseId\",\n        templateUrl: \"app/main/module/module.html\",\n        controller: 'ModuleController',\n        controllerAs: 'module'\n      })\n      .state('404', {\n        url: \"/404\",\n        templateUrl: \"app/exception/404.html\"\n      });\n      $urlRouterProvider.when('', '/sense/list');\n      $urlRouterProvider.when('/sense', '/sense/list');\n      $urlRouterProvider.otherwise('404');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"public\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/exception/404.html\",\"<div class=\\\"container\\\"><h1 style=\\\"text-align: center\\\">404 NOT FOUND</h1></div>\");\n$templateCache.put(\"app/node-red/node-red.html\",\"<div class=\\\"node-red-box\\\"><iframe src=\\\"node-red/\\\" width=\\\"100%\\\" height=\\\"100%\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\"></iframe></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"container\\\"><ng-sense-content view-type=\\\"{{main.viewType}}\\\"></ng-sense-content></div></div>\");\n$templateCache.put(\"app/components/moduleContent/moduleContent-grid.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"row\\\"><div ng-module-item=\\\"\\\" class=\\\"col-md-4\\\" ng-repeat=\\\"key in modules\\\" module-id=\\\"{{ key }}\\\" sense-id=\\\"{{ senseId }}\\\" grid-view=\\\"true\\\"></div></div><div class=\\\"row empty-text\\\" ng-show=\\\"moduleEmpty\\\">You have not yet registered any Humix Sense.</div></div>\");\n$templateCache.put(\"app/components/moduleContent/moduleContent-list.html\",\"<table class=\\\"table\\\"><thead></thead><tbody ng-module-item=\\\"\\\" ng-repeat=\\\"key in modules\\\" module-id=\\\"{{ key }}\\\" sense-id=\\\"{{ senseId }}\\\" grid-view=\\\"false\\\"></tbody><tbody ng-show=\\\"moduleEmpty\\\"><tr><td colspan=\\\"6\\\" class=\\\"empty-text\\\">You have not yet registered any modules yet.</td></tr></tbody></table>\");\n$templateCache.put(\"app/components/moduleItem/moduleItem-grid.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"row panel-heading\\\"><div class=\\\"col-md-10\\\">{{sense.moduleId}}</div><div class=\\\"col-md-2\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteModule(sense.moduleId)\\\"></div></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-4\\\"><img ng-src=\\\"assets/images/humix_on.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></div><div class=\\\"col-md-8\\\"><br><div><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.moduleStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.moduleStatus }}</div></div></div></div></div></div>\");\n$templateCache.put(\"app/components/moduleItem/moduleItem-list.html\",\"<tr><th scope=\\\"row\\\" class=\\\"vert-align\\\"></th><td class=\\\"vert-align\\\">{{sense.moduleId}}</td><td class=\\\"vert-align\\\"></td><td class=\\\"vert-align\\\"><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.moduleStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.moduleStatus }}</div></td><td class=\\\"vert-align\\\"></td><td class=\\\"vert-align\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteModule(sense.moduleId)\\\"></td></tr>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div class=\\\"row\\\" id=\\\"header\\\"><div class=\\\"col-md-2\\\"><div class=\\\"logo-img pull-left\\\"><img src=\\\"assets/images/IBM_IoT_cloud2.png\\\" width=\\\"117px\\\"></div></div><div class=\\\"col-md-4\\\"><div class=\\\"logo-text\\\"><h1>HUMIX NG</h1></div></div><div class=\\\"col-md-6 header-options\\\"><ul class=\\\"list-inline breadcrumbs\\\"><li><a ui-sref=\\\"sense\\\">Sense</a></li><li><a ui-sref=\\\"think\\\">Think</a></li></ul></div></div>\");\n$templateCache.put(\"app/components/senseContent/senseContent-grid.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"sense-btn-container\\\"><div class=\\\"title\\\"><button class=\\\"btn btn-default btn-add-sense\\\" ng-click=\\\"vm.open()\\\">Add Sense</button></div><div class=\\\"title sense-btn-container\\\"><a ui-sref=\\\"sense({viewType: \\'list\\'})\\\"><img class=\\\"btn btn-default btn-view\\\" src=\\\"assets/images/tableView.png\\\"></a></div></div><br><div class=\\\"row\\\"><div ng-sense-item=\\\"\\\" class=\\\"col-md-4\\\" ng-repeat=\\\"(key, val) in vm.getDevices()\\\" sense-id=\\\"{{ key }}\\\" img-id=\\\"{{ val }}\\\" grid-view=\\\"true\\\"></div></div></div><script type=\\\"text/ng-template\\\" id=\\\"addModalContent.html\\\"><div class=\\\"modal-header\\\"> <h3 class=\\\"modal-title\\\">Add Sencse</h3> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\"> <div class=\\\"form-group\\\"> <div class=\\\"col-sm-3 modal-thumbnail-block\\\"> <img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ vm.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\" /> </div> <label class=\\\"col-sm-1 control-label\\\" for=\\\"sense-id\\\">ID: </label> <div class=\\\"col-sm-8\\\"> <input type=\\\"text\\\" id=\\\"sense-id\\\" class=\\\"form-control\\\" placeholder=\\\"Humix-Godzilla\\\" ng-model=\\\"vm.senseId\\\"/> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\">OK</button> <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button> </div></script>\");\n$templateCache.put(\"app/components/senseContent/senseContent-list.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"sense-btn-container\\\"><div class=\\\"title\\\"><button class=\\\"btn btn-default btn-add-sense\\\" ng-click=\\\"vm.open()\\\">Add Sense</button></div><div class=\\\"title sense-btn-container\\\"><a ui-sref=\\\"sense({viewType: \\'grid\\'})\\\"><img class=\\\"btn btn-default btn-view\\\" src=\\\"assets/images/gridView.png\\\"></a></div></div><br><div class=\\\"row\\\"><table class=\\\"table\\\"><thead class=\\\"thead-inverse\\\"><tr><th></th><th>Sense ID</th><th>Status</th><th>Modules</th><th>Remove</th></tr></thead><tbody ng-sense-item=\\\"\\\" ng-repeat=\\\"(key, val) in vm.getDevices()\\\" sense-id=\\\"{{ key }}\\\" img-id=\\\"{{ val }}\\\"></tbody></table></div></div><script type=\\\"text/ng-template\\\" id=\\\"addModalContent.html\\\"><div class=\\\"modal-header\\\"> <h3 class=\\\"modal-title\\\">Add Sencse</h3> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\"> <div class=\\\"form-group\\\"> <div class=\\\"col-sm-3 modal-thumbnail-block\\\"> <img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ vm.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\" /> </div> <label class=\\\"col-sm-1 control-label\\\" for=\\\"sense-id\\\">ID: </label> <div class=\\\"col-sm-8\\\"> <input type=\\\"text\\\" id=\\\"sense-id\\\" class=\\\"form-control\\\" placeholder=\\\"Humix-Godzilla\\\" ng-model=\\\"vm.senseId\\\"/> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\">OK</button> <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button> </div></script>\");\n$templateCache.put(\"app/components/senseItem/senseItem-grid.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"row panel-heading\\\"><div class=\\\"col-md-10\\\"><a ui-sref=\\\"module({senseId: sense.senseId})\\\">{{sense.senseId}}</a></div><div class=\\\"col-md-2\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteSense(sense.senseId)\\\"></div></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-4\\\"><a ui-sref=\\\"module({senseId: sense.senseId})\\\"><img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ sense.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></a></div><div class=\\\"col-md-8\\\"><br><div><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.deviceStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.deviceStatus }}</div></div></div></div></div></div>\");\n$templateCache.put(\"app/components/senseItem/senseItem-list.html\",\"<tr><th scope=\\\"row\\\" class=\\\"vert-align\\\"><img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ sense.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></th><td class=\\\"vert-align\\\"><button ng-click=\\\"displayModules()\\\">{{expandButtonText}}</button> {{sense.senseId}}</td><td class=\\\"vert-align\\\"><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.deviceStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.deviceStatus }}</div></td><td class=\\\"vert-align\\\">{{moduleCount}}</td><td class=\\\"vert-align\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteSense(sense.senseId)\\\"></td></tr><tr ng-show=\\\"showModules\\\"><td class=\\\"no-top-border\\\"></td><td colspan=\\\"4\\\" class=\\\"no-top-border\\\"><ng-module-content sense-id=\\\"{{ sense.senseId }}\\\" grid-view=\\\"false\\\"></ng-module-content></td></tr>\");\n$templateCache.put(\"app/main/module/module.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"container\\\"><h1>{{module.senseId}}</h1><ng-module-content sense-id=\\\"{{module.senseId}}\\\" grid-view=\\\"true\\\"></ng-module-content></div></div>\");}]);"],"sourceRoot":"/source/"}