{"version":3,"sources":["scripts/app-24602f1703.js"],"names":["angular","module","factory","$resource","SenseStatus","AllModuleStatus","ModuleStatus","ngSenseItem","senseItemController","deviceList","status","moduleList","$interval","$scope","getSenseStatus","get","senseId","sense","response","deviceStatus","logButtonText","expandButtonText","showModules","showLogViewer","getModules","Modules","modules","fromJson","result","moduleCount","length","displayModules","displayLog","deleteSense","confirm","delDevice","$inject","directive","restrict","replace","template","elem","attrs","gridView","scope","imgId","link","element","dynamicTemplateUrl","$observe","controller","controllerAs","bindToController","senseContent","senseContentController","$modal","$log","vm","this","getDevices","viewButtonClick","info","open","modalInstance","animation","templateUrl","modalController","then","setDevice","id","Date","$modalInstance","Math","floor","random","ok","close","cancel","dismiss","creationDate","viewType","$watch","ngNavbar","NavbarController","ngModuleItem","moduleItemController","getModuleStatus","moduleId","moduleStatus","deleteModule","Module","$parent","moduleContent","moduleContentController","moduleEmpty","$http","devices","iconId","method","url","data","senseIcon","forEach","obj","service","ModuleController","$state","$stateParams","MainController","$timeout","toastr","activate","classAnimation","showToastr","awesomeThings","runBlock","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","when","otherwise","config","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-24602f1703.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('public', ['ngAnimate', 'ngCookies', 'ngSanitize', 'ui.router', 'ui.bootstrap', 'toastr', 'ngFileUpload', 'ngResource']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.\n    module('public').\n    factory('status', function ($resource) {\n      return {\n        SenseStatus: $resource('api/status/:senseId', {}, {}),\n        AllModuleStatus: $resource('api/status/:senseId/modules', {}, {}),\n        ModuleStatus: $resource('api/status/:senseId/modules/:moduleId', {}, {})\n      };\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseItem', ngSenseItem);\n\n  /** @ngInject */\n  function ngSenseItem() {\n    var directive = {\n      restrict: 'A',\n      replace: true,\n      template: function (elem, attrs) {\n        if (attrs.gridView == \"true\") {\n            return '<div ng-include src=\"dynamicTemplateUrl\"></div>';\n        }\n        else {\n            return '<tbody ng-include src=\"dynamicTemplateUrl\"></tbody>';\n        }\n      },\n      scope: {\n          senseId: '@',\n          imgId: '@',\n          deviceStatus: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.dynamicTemplateUrl = 'app/components/senseItem/senseItem-list.html';\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;\n          scope.getModules();\n          scope.getSenseStatus();\n\n        });\n\n        attrs.$observe('imgId', function(imgId) {\n          scope.sense.imgId = imgId;\n        });\n\n        attrs.$observe('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/senseItem/senseItem-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/senseItem/senseItem-list.html';\n          }\n        });\n      },\n      controller: senseItemController,\n      controllerAs: 'senseItemController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseItemController(deviceList, status, moduleList, $interval, $scope) {\n      $scope.logButtonText = 'View';\n      $scope.expandButtonText = '+';\n      $scope.showModules = false;\n      $scope.showLogViewer = false;\n\n      $interval(getSenseStatus, 10000);\n\n      function getSenseStatus() {\n        status.SenseStatus.get({senseId: $scope.sense.senseId}, function(response) {\n          $scope.sense.deviceStatus = response.status;\n        });\n      }\n\n      $scope.getSenseStatus = getSenseStatus;\n\n      $scope.getModules = function () {\n        moduleList.Modules.get({senseId: $scope.sense.senseId}, function(response) {\n          $scope.modules = angular.fromJson(response.result);\n          $scope.moduleCount = $scope.modules.length;\n        });\n      };\n\n      $scope.displayModules = function () {\n          if ($scope.expandButtonText == '+') {\n            $scope.expandButtonText = '-';\n          } else if ($scope.expandButtonText == '-') {\n            $scope.expandButtonText = '+';\n          }\n          $scope.showModules = !$scope.showModules;\n      };\n\n      $scope.displayLog = function () {\n          if ($scope.logButtonText == 'View') {\n            $scope.logButtonText = 'Hide';\n          } else {\n            $scope.logButtonText = 'View';\n          }\n          $scope.showLogViewer = !$scope.showLogViewer;\n      };\n\n      $scope.deleteSense = function(senseId) {\n        if (confirm(\"Do you want to delete \" + senseId + \" ?\")) {\n          deviceList.delDevice(senseId);\n        }\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseContent', senseContent);\n\n  /** @ngInject */\n  function senseContent() {\n    var directive = {\n      restrict: 'E',\n      template: '<ng-include src=\"dynamicTemplateUrl\"></ng-include>',\n      //templateUrl: 'app/components/senseContent/senseContent-table.html',\n      scope: {\n          creationDate: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.dynamicTemplateUrl = 'app/components/senseContent/senseContent-list.html';\n        attrs.$observe('viewType', function(viewType) {\n          if (viewType == \"grid\") {\n              scope.gridView = \"true\";\n          }\n          else {\n              scope.gridView = \"false\";\n          }\n        });\n\n        scope.$watch('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/senseContent/senseContent-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/senseContent/senseContent-list.html';\n          }\n        });\n      },\n      controller: senseContentController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseContentController(deviceList, $scope, $modal, $log) {\n      var vm = this;\n\n      vm.getDevices = deviceList.getDevices;\n      vm.delDevice = deviceList.delDevice;\n      // vm.deviceEmpty = (angular.equals(vm.getDevices(),{})) ? true: false;\n\n      // $scope.$watch(function(){ return deviceList.getDevices}, function(newVal, oldVal){\n      //   $log.info('data change'+newVal+' '+oldVal);\n      // }, true);\n\n      vm.viewButtonClick = function() {\n          $log.info('org scope.gridView: ' + $scope.gridView);\n          $scope.gridView = !$scope.gridView;\n      };\n\n      vm.open = function(){\n\n        var modalInstance = $modal.open({\n          animation: 1,\n          templateUrl: 'addModalContent.html',\n          controller: modalController,\n          controllerAs: 'vm'\n        });\n\n        modalInstance.result.then(function (sense) {\n\n          deviceList.setDevice(sense.id, sense.imgId);\n\n          $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n\n        }, function () {\n\n          $log.info('Modal dismissed at: ' + new Date());\n\n        });\n      };\n    }\n\n    function modalController($modalInstance){\n      var vm = this;\n\n      vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n\n      vm.senseId = \"\"; // sense id\n\n\n      vm.ok = function(){\n        $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n      };\n\n      vm.cancel = function(){\n        $modalInstance.dismiss('cancel');\n      };\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngNavbar', ngNavbar);\n\n  /** @ngInject */\n  function ngNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      \n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngModuleItem', ngModuleItem);\n\n  /** @ngInject */\n  function ngModuleItem() {\n    var directive = {\n      restrict: 'A',\n      replace: true,\n      template: function (elem, attrs) {\n        if (attrs.gridView == \"true\") {\n            return '<div ng-include src=\"dynamicTemplateUrl\"></div>';\n        }\n        else {\n            return '<tbody ng-include src=\"dynamicTemplateUrl\"></tbody>';\n        }\n      },\n      scope: {\n          senseId: '@',\n          moduleId: '@',\n          moduleStatus: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.dynamicTemplateUrl = 'app/components/moduleItem/moduleItem-list.html';\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;\n          scope.getModuleStatus();\n        });\n\n        attrs.$observe('moduleId', function(moduleId) {\n          scope.sense.moduleId = moduleId;\n          scope.getModuleStatus();\n        });\n\n        attrs.$observe('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/moduleItem/moduleItem-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/moduleItem/moduleItem-list.html';\n          }\n        });\n      },\n      controller: moduleItemController,\n      controllerAs: 'moduleItemController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function moduleItemController(moduleList, status, $scope, $interval) {\n      $scope.showLogViewer = false;\n\n      $interval(getModuleStatus, 10000);\n\n      function getModuleStatus() {\n        if ($scope.sense.senseId && $scope.sense.moduleId) {\n          status.ModuleStatus.get({senseId: $scope.sense.senseId, moduleId: $scope.sense.moduleId}, function(response) {\n            $scope.sense.moduleStatus = response.status;\n          });\n        }\n      }\n\n      $scope.getModuleStatus = getModuleStatus;\n\n      $scope.displayLog = function () {\n          $scope.showLogViewer = !$scope.showLogViewer;\n      };\n\n      $scope.deleteModule = function(senseId, moduleId) {\n        if (confirm(\"Do you want to delete module [\" + moduleId + \"] for sense [\" + senseId + \"] ?\")) {\n            moduleList.Module.delete({senseId: $scope.sense.senseId, moduleId: $scope.sense.moduleId}, function() {\n                $scope.$parent.getModules();\n            });\n        }\n      }\n\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngModuleContent', moduleContent);\n\n  /** @ngInject */\n  function moduleContent() {\n    var directive = {\n      restrict: 'E',\n      replace: true,\n      template: '<ng-include src=\"dynamicTemplateUrl\"></ng-include>',\n      //templateUrl: 'app/components/moduleContent/moduleContent.html',\n      scope: {\n          creationDate: '=',\n          modules: '=',\n          senseId: '@'\n      },\n      link: function(scope, element, attrs){\n        scope.dynamicTemplateUrl = 'app/components/moduleContent/moduleContent-list.html';\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.senseId = senseId;\n          scope.getModules();\n        });\n\n        attrs.$observe('gridView', function(gridView) {\n          scope.gridView = gridView;\n          if (scope.gridView == \"true\") {\n              scope.dynamicTemplateUrl = 'app/components/moduleContent/moduleContent-grid.html';\n          }\n          else {\n              scope.dynamicTemplateUrl = 'app/components/moduleContent/moduleContent-list.html';\n          }\n        });\n      },\n      controller: moduleContentController,\n      controllerAs: 'moduleContentController',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function moduleContentController(moduleList, $scope) {\n\n      $scope.getModules = function () {\n        moduleList.Modules.get({senseId: $scope.senseId}, function(response) {\n          $scope.modules = angular.fromJson(response.result);\n          $scope.moduleEmpty = $scope.modules.length == 0;\n        });\n      };\n\n      // $scope.$watch(function(){ return moduleList.getModules}, function(newVal, oldVal){\n      //   $log.info('data change'+newVal+' '+oldVal);\n      // }, true);\n\n      // vm.open = function(){\n      //\n      //   var modalInstance = $modal.open({\n      //     animation: 1,\n      //     templateUrl: 'addModalContent.html',\n      //     controller: modalController,\n      //     controllerAs: 'vm'\n      //   });\n      //\n      //   modalInstance.result.then(function (sense) {\n      //\n      //     moduleList.setModule(sense.id, sense.imgId);\n      //\n      //     $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n      //\n      //   }, function () {\n      //\n      //     $log.info('Modal dismissed at: ' + new Date());\n      //\n      //   });\n      // };\n    }\n\n    // function modalController($modalInstance){\n    //   var vm = this;\n    //\n    //   vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n    //\n    //   vm.senseId = \"\"; // sense id\n    //\n    //\n    //   vm.ok = function(){\n    //     $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n    //   };\n    //\n    //   vm.cancel = function(){\n    //     $modalInstance.dismiss('cancel');\n    //   };\n    // }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('public')\n      .service('deviceList', deviceList);\n\n\n  /** @ngInject */\n  function deviceList($http, $log) {\n    var devices = {};\n    $http({\n      method: 'GET',\n      url: 'api/devices'\n    }).then(function successCallback(response) {\n        var data = angular.fromJson(response.data.result);\n        data.forEach(function(obj){\n          devices[obj.senseId] = obj.senseIcon;\n        });\n      }, function errorCallback(response) {\n        $log.info(response);\n    });      \n\n    this.getDevices = getDevices;\n    this.setDevice = setDevice;\n    this.delDevice = delDevice;\n\n    function getDevices() {\n      return devices;\n    }\n\n    function setDevice(senseId, iconId) {\n      // call the backend api here to store the data\n      $http({\n        method: 'POST',\n        url: 'api/registerDevice',\n        data: {'senseId':senseId, 'senseIcon': iconId}\n      }).then(function successCallback(response) {\n          $log.info(response);\n        }, function errorCallback(response) {\n          $log.info(response);\n      });      \n      devices[senseId] = iconId;\n    }\n\n    function delDevice(senseId) {      \n      // call the backend api here to delete the data\n      $http({\n        method: 'DELETE',\n        url: 'api/devices/'+ senseId\n      });      \n\n      delete devices[senseId];\n    }\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular.\n    module('public').\n    factory('moduleList', function ($resource) {\n      return {\n        Modules: $resource('api/devices/:senseId/modules', {}, {}),\n        Module: $resource('api/devices/:senseId/modules/:moduleId', {}, {})\n      };\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .controller('ModuleController', ModuleController);\n\n  /** @ngInject */\n  function ModuleController($scope, $state, $stateParams) {\n    var vm = this;\n    //$log.info('senseId: ' + $stateParams.senseId);\n    vm.senseId = $stateParams.senseId;\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($stateParams, $timeout, toastr) {\n    var vm = this;\n\n    vm.viewType = ($stateParams.viewType == 'grid') ? 'grid' : 'list';\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1445587798203;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('think', {\n        url: \"/think\",\n        templateUrl: \"app/node-red/node-red.html\"\n      })\n      .state('sense', {\n        url: \"/sense/:viewType\",\n        templateUrl: \"app/main/main.html\",\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .state('module', {\n        url: \"/module/:senseId\",\n        templateUrl: \"app/main/module/module.html\",\n        controller: 'ModuleController',\n        controllerAs: 'module'\n      })\n      .state('404', {\n        url: \"/404\",\n        templateUrl: \"app/exception/404.html\"\n      });\n      $urlRouterProvider.when('', '/sense/list');\n      $urlRouterProvider.when('/sense', '/sense/list');\n      $urlRouterProvider.otherwise('404');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"public\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/exception/404.html\",\"<div class=\\\"container\\\"><h1 style=\\\"text-align: center\\\">404 NOT FOUND</h1></div>\");\n$templateCache.put(\"app/node-red/node-red.html\",\"<div class=\\\"node-red-box\\\"><iframe src=\\\"node-red/\\\" width=\\\"100%\\\" height=\\\"100%\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\"></iframe></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"container\\\"><ng-sense-content view-type=\\\"{{main.viewType}}\\\"></ng-sense-content></div></div>\");\n$templateCache.put(\"app/components/moduleContent/moduleContent-grid.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"row\\\"><div ng-module-item=\\\"\\\" class=\\\"col-md-4\\\" ng-repeat=\\\"key in modules\\\" module-id=\\\"{{ key }}\\\" sense-id=\\\"{{ senseId }}\\\" grid-view=\\\"true\\\"></div></div><div class=\\\"row empty-text\\\" ng-show=\\\"moduleEmpty\\\">You have not yet registered any Humix Sense.</div></div>\");\n$templateCache.put(\"app/components/moduleContent/moduleContent-list.html\",\"<table class=\\\"table\\\"><thead></thead><tbody ng-module-item=\\\"\\\" ng-repeat=\\\"key in modules\\\" module-id=\\\"{{ key }}\\\" sense-id=\\\"{{ senseId }}\\\" grid-view=\\\"false\\\"></tbody><tbody ng-show=\\\"moduleEmpty\\\"><tr><td colspan=\\\"6\\\" class=\\\"empty-text\\\">You have not yet registered any modules yet.</td></tr></tbody></table>\");\n$templateCache.put(\"app/components/moduleItem/moduleItem-grid.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"row panel-heading\\\"><div class=\\\"col-md-10\\\">{{sense.moduleId}}</div><div class=\\\"col-md-2\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteModule(sense.senseId, sense.moduleId)\\\"></div></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-4\\\"><img ng-src=\\\"assets/images/humix_on.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></div><div class=\\\"col-md-8\\\"><br><div><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.moduleStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.moduleStatus }}</div></div></div></div></div></div>\");\n$templateCache.put(\"app/components/moduleItem/moduleItem-list.html\",\"<tr><th scope=\\\"row\\\" class=\\\"vert-align\\\"></th><td class=\\\"vert-align\\\">{{sense.moduleId}}</td><td class=\\\"vert-align\\\"></td><td class=\\\"vert-align\\\"><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.moduleStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.moduleStatus }}</div></td><td class=\\\"vert-align\\\"></td><td class=\\\"vert-align\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteModule(sense.senseId, sense.moduleId)\\\"></td></tr>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div class=\\\"row\\\" id=\\\"header\\\"><div class=\\\"col-md-2\\\"><div class=\\\"logo-img pull-left\\\"><img src=\\\"assets/images/IBM_IoT_cloud2.png\\\" width=\\\"117px\\\"></div></div><div class=\\\"col-md-4\\\"><div class=\\\"logo-text\\\"><h1>HUMIX NG</h1></div></div><div class=\\\"col-md-6 header-options\\\"><ul class=\\\"list-inline breadcrumbs\\\"><li><a ui-sref=\\\"sense\\\">Sense</a></li><li><a ui-sref=\\\"think\\\">Think</a></li></ul></div></div>\");\n$templateCache.put(\"app/components/senseContent/senseContent-grid.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"sense-btn-container\\\"><div class=\\\"title\\\"><button class=\\\"btn btn-default btn-add-sense\\\" ng-click=\\\"vm.open()\\\">Add Sense</button></div><div class=\\\"title sense-btn-container\\\"><a ui-sref=\\\"sense({viewType: \\'list\\'})\\\"><img class=\\\"btn btn-default btn-view\\\" src=\\\"assets/images/tableView.png\\\"></a></div></div><br><div class=\\\"row\\\"><div ng-sense-item=\\\"\\\" class=\\\"col-md-4\\\" ng-repeat=\\\"(key, val) in vm.getDevices()\\\" sense-id=\\\"{{ key }}\\\" img-id=\\\"{{ val }}\\\" grid-view=\\\"true\\\"></div></div></div><script type=\\\"text/ng-template\\\" id=\\\"addModalContent.html\\\"><div class=\\\"modal-header\\\"> <h3 class=\\\"modal-title\\\">Add Sencse</h3> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\"> <div class=\\\"form-group\\\"> <div class=\\\"col-sm-3 modal-thumbnail-block\\\"> <img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ vm.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\" /> </div> <label class=\\\"col-sm-1 control-label\\\" for=\\\"sense-id\\\">ID: </label> <div class=\\\"col-sm-8\\\"> <input type=\\\"text\\\" id=\\\"sense-id\\\" class=\\\"form-control\\\" placeholder=\\\"Humix-Godzilla\\\" ng-model=\\\"vm.senseId\\\"/> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\">OK</button> <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button> </div></script>\");\n$templateCache.put(\"app/components/senseContent/senseContent-list.html\",\"<div class=\\\"sense-container\\\"><div class=\\\"sense-btn-container\\\"><div class=\\\"title\\\"><button class=\\\"btn btn-default btn-add-sense\\\" ng-click=\\\"vm.open()\\\">Add Sense</button></div><div class=\\\"title sense-btn-container\\\"><a ui-sref=\\\"sense({viewType: \\'grid\\'})\\\"><img class=\\\"btn btn-default btn-view\\\" src=\\\"assets/images/gridView.png\\\"></a></div></div><br><div class=\\\"row\\\"><table class=\\\"table\\\"><thead class=\\\"thead-inverse\\\"><tr><th></th><th>Sense ID</th><th>Status</th><th>Modules</th><th>Remove</th></tr></thead><tbody ng-sense-item=\\\"\\\" ng-repeat=\\\"(key, val) in vm.getDevices()\\\" sense-id=\\\"{{ key }}\\\" img-id=\\\"{{ val }}\\\"></tbody></table></div></div><script type=\\\"text/ng-template\\\" id=\\\"addModalContent.html\\\"><div class=\\\"modal-header\\\"> <h3 class=\\\"modal-title\\\">Add Sencse</h3> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\"> <div class=\\\"form-group\\\"> <div class=\\\"col-sm-3 modal-thumbnail-block\\\"> <img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ vm.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\" /> </div> <label class=\\\"col-sm-1 control-label\\\" for=\\\"sense-id\\\">ID: </label> <div class=\\\"col-sm-8\\\"> <input type=\\\"text\\\" id=\\\"sense-id\\\" class=\\\"form-control\\\" placeholder=\\\"Humix-Godzilla\\\" ng-model=\\\"vm.senseId\\\"/> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\">OK</button> <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button> </div></script>\");\n$templateCache.put(\"app/components/senseItem/senseItem-grid.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"row panel-heading\\\"><div class=\\\"col-md-10\\\"><a ui-sref=\\\"module({senseId: sense.senseId})\\\">{{sense.senseId}}</a></div><div class=\\\"col-md-2\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteSense(sense.senseId)\\\"></div></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-4\\\"><a ui-sref=\\\"module({senseId: sense.senseId})\\\"><img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ sense.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></a></div><div class=\\\"col-md-8\\\"><br><div><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.deviceStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.deviceStatus }}</div></div></div></div></div></div>\");\n$templateCache.put(\"app/components/senseItem/senseItem-list.html\",\"<tr><th scope=\\\"row\\\" class=\\\"vert-align\\\"><img width=\\\"60\\\" height=\\\"60\\\" border=\\\"1\\\" ng-src=\\\"assets/images/robot-icon-list/{{ sense.imgId }}.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></th><td class=\\\"vert-align\\\"><button ng-click=\\\"displayModules()\\\">{{expandButtonText}}</button> {{sense.senseId}}</td><td class=\\\"vert-align\\\"><div class=\\\"sense-status-icon-cell\\\"><div class=\\\"sense-status-{{ sense.deviceStatus }}\\\"></div></div><div class=\\\"sense-status-text-cell\\\">{{ sense.deviceStatus }}</div></td><td class=\\\"vert-align\\\">{{moduleCount}}</td><td class=\\\"vert-align\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"deleteSense(sense.senseId)\\\"></td></tr><tr ng-show=\\\"showModules\\\"><td class=\\\"no-top-border\\\"></td><td colspan=\\\"4\\\" class=\\\"no-top-border\\\"><ng-module-content sense-id=\\\"{{ sense.senseId }}\\\" grid-view=\\\"false\\\"></ng-module-content></td></tr>\");\n$templateCache.put(\"app/main/module/module.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"container\\\"><h1>{{module.senseId}}</h1><ng-module-content sense-id=\\\"{{module.senseId}}\\\" grid-view=\\\"true\\\"></ng-module-content></div></div>\");}]);"],"sourceRoot":"/source/"}